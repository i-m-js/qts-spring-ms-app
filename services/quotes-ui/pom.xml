<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>services</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>quotes-ui</artifactId>
	<dependencies>
		<!--AWS ELB does the service discovery, use this only for local development-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>BUILD-UI</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>npm run build (compile)</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<executable>npm</executable>
									<workingDirectory>
										${project.basedir}/src/main/ui</workingDirectory>
									<arguments>
										<argument>run</argument>
										<argument>build</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-resources</id>
								<!-- here the phase you need -->
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>
										${basedir}/target/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>
												${project.basedir}/src/main/ui/dist/ui/browser</directory>
											<!--<filtering>true</filtering>-->
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>